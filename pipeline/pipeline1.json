{
	"name": "pipeline1",
	"properties": {
		"activities": [
			{
				"name": "Stored procedure1",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[dbo].[EinsteinViewHYCSENDMAIL]",
					"storedProcedureParameters": {
						"account_name": {
							"value": "",
							"type": "String"
						},
						"description": {
							"value": "",
							"type": "String"
						},
						"display_name": {
							"value": "",
							"type": "String"
						},
						"email_address": {
							"value": "",
							"type": "String"
						},
						"enable_ssl": {
							"value": "",
							"type": "Int32"
						},
						"mailserver_name": {
							"value": "",
							"type": "String"
						},
						"password": {
							"value": "",
							"type": "String"
						},
						"port": {
							"value": "",
							"type": "Int32"
						},
						"replyto_address": {
							"value": "",
							"type": "String"
						},
						"username": {
							"value": "",
							"type": "String"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "linkedService1",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "If Condition1",
				"type": "IfCondition",
				"dependsOn": [
					{
						"activity": "Stored procedure1",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"expression": {
						"value": "@greaterOrEquals(activity('Stored procedure1').output.firstRow.record_count,1)",
						"type": "Expression"
					},
					"ifFalseActivities": [
						{
							"name": "Wait1",
							"type": "Wait",
							"dependsOn": [],
							"userProperties": [],
							"typeProperties": {
								"waitTimeInSeconds": 1
							}
						}
					],
					"ifTrueActivities": [
						{
							"name": "Lookup1",
							"type": "Lookup",
							"dependsOn": [],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "AzureSqlSource",
									"sqlReaderQuery": "Declare @count int = 0\n\nselect @count = count(1)  from (\n\nselect Distinct A.Experiment_Title\n, A.Weight_period_name \n, A.[ToS [h]]],A.REACTOR,\ncount (A.[ToS [h]]]) _count from \n[HYC].[EinsteinViewHYC] A inner join  [HYC].[EinsteinViewHYC] B \non A.Experiment_Title=B.Experiment_Title \nAND A.Weight_period_name=B.Weight_period_name\nAND A.[ToS [h]]]!=B.[ToS [h]]]\nAnd A.REACTOR =B.Reactor\nwhere  A.[ToS [h]]]!=B.[ToS [h]]]\nGroup by A.Experiment_Title, A.Weight_period_name , A.[ToS [h]]],A.REACTOR\nHaving count (A.[ToS [h]]])>1\n\n\n)A\n\nif (@count > 0)\n\nprint 'Email triggered when there will be a same Experiment and Weight_period_name that has different time on stream \nwhich occurs more than once'\nelse\nprint 'No mail'\n",
									"queryTimeout": "02:00:00",
									"partitionOption": "None"
								},
								"dataset": {
									"referenceName": "AzureSqlTable1",
									"type": "DatasetReference"
								},
								"firstRowOnly": true
							}
						},
						{
							"name": "Web1",
							"type": "WebActivity",
							"dependsOn": [
								{
									"activity": "Lookup1",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"url": "https://prod-159.westus.logic.azure.com:443/workflows/4843e2792fa541d38e0a71ab3ab78ed1/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=YIlt0Ta9_3ERrY_DxoU92e0KvW2d_evivT5JaLzZ5Pk",
								"method": "POST",
								"body": "@activity('Lookup1').output"
							}
						}
					]
				}
			}
		],
		"annotations": []
	}
}